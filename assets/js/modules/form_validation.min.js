function showError(e,t){const r=e.nextElementSibling;r&&r.classList.contains("error-message")&&(r.innerText=t,r.style.display="block"),e.classList.add("invalid"),e.classList.remove("valid")}function clearError(e){const t=e.nextElementSibling;t&&t.classList.contains("error-message")&&(t.innerText="",t.style.display="none"),e.classList.remove("invalid"),e.classList.add("valid")}function validateField(e){const t=validators[e.id];if(t){const r=t(e);if(r)return showError(e,r),!1}return e.required&&!e.value?(showError(e,"Este campo é obrigatório."),!1):(clearError(e),!0)}const validators={nome:e=>{const t=e.value.trim().split(" ");return t.length<2?"Por favor, digite seu nome completo.":""},email:e=>{const t=/^[^\s@]+@[^\s@]+\.[^\s@]+$/;return t.test(e.value)?"":"Por favor, digite um e-mail válido."},cpf:e=>e.value.length<14?"O CPF deve ter 11 dígitos.":"",telefone:e=>e.value.length<15?"O telefone deve ter 11 dígitos.":"",cep:e=>e.value.length<9?"O CEP deve ter 8 dígitos.":"",data_nasc:e=>{const t=new Date(e.value),r=new Date;return r.setHours(0,0,0,0),e.value?t>r?"A data não pode ser no futuro.":"":"A data de nascimento é obrigatória."}};export function initFormValidation(){const e=document.querySelector("form[novalidate]");if(!e)return;const t=e.querySelectorAll(Object.keys(validators).map(e=>`#${e}`).join(", "));t.forEach(e=>{e.addEventListener("blur",()=>validateField(e))}),e.addEventListener("submit",e=>{let r=!0;t.forEach(e=>{validateField(e)||(r=!1)}),r||(e.preventDefault(),alert("Por favor, corrija os erros no formulário antes de enviar."))})}